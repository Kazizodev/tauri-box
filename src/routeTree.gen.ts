/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardLayoutImport } from './routes/_dashboard-layout'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardLayoutDashboardIndexImport } from './routes/_dashboard-layout/dashboard/index'
import { Route as DashboardLayoutDashboardResinsIndexImport } from './routes/_dashboard-layout/dashboard/resins/index'
import { Route as DashboardLayoutDashboardGlassesIndexImport } from './routes/_dashboard-layout/dashboard/glasses/index'
import { Route as DashboardLayoutDashboardCustomersIndexImport } from './routes/_dashboard-layout/dashboard/customers/index'
import { Route as DashboardLayoutDashboardAdditivesIndexImport } from './routes/_dashboard-layout/dashboard/additives/index'
import { Route as DashboardLayoutDashboardResinsIdImport } from './routes/_dashboard-layout/dashboard/resins/$id'
import { Route as DashboardLayoutDashboardGlassesIdImport } from './routes/_dashboard-layout/dashboard/glasses/$id'
import { Route as DashboardLayoutDashboardCustomersIdImport } from './routes/_dashboard-layout/dashboard/customers/$id'
import { Route as DashboardLayoutDashboardAdditivesIdImport } from './routes/_dashboard-layout/dashboard/additives/$id'

// Create/Update Routes

const DashboardLayoutRoute = DashboardLayoutImport.update({
  id: '/_dashboard-layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardLayoutDashboardIndexRoute =
  DashboardLayoutDashboardIndexImport.update({
    path: '/dashboard/',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

const DashboardLayoutDashboardResinsIndexRoute =
  DashboardLayoutDashboardResinsIndexImport.update({
    path: '/dashboard/resins/',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

const DashboardLayoutDashboardGlassesIndexRoute =
  DashboardLayoutDashboardGlassesIndexImport.update({
    path: '/dashboard/glasses/',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

const DashboardLayoutDashboardCustomersIndexRoute =
  DashboardLayoutDashboardCustomersIndexImport.update({
    path: '/dashboard/customers/',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

const DashboardLayoutDashboardAdditivesIndexRoute =
  DashboardLayoutDashboardAdditivesIndexImport.update({
    path: '/dashboard/additives/',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

const DashboardLayoutDashboardResinsIdRoute =
  DashboardLayoutDashboardResinsIdImport.update({
    path: '/dashboard/resins/$id',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

const DashboardLayoutDashboardGlassesIdRoute =
  DashboardLayoutDashboardGlassesIdImport.update({
    path: '/dashboard/glasses/$id',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

const DashboardLayoutDashboardCustomersIdRoute =
  DashboardLayoutDashboardCustomersIdImport.update({
    path: '/dashboard/customers/$id',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

const DashboardLayoutDashboardAdditivesIdRoute =
  DashboardLayoutDashboardAdditivesIdImport.update({
    path: '/dashboard/additives/$id',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard-layout': {
      preLoaderRoute: typeof DashboardLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard-layout/dashboard/': {
      preLoaderRoute: typeof DashboardLayoutDashboardIndexImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/_dashboard-layout/dashboard/additives/$id': {
      preLoaderRoute: typeof DashboardLayoutDashboardAdditivesIdImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/_dashboard-layout/dashboard/customers/$id': {
      preLoaderRoute: typeof DashboardLayoutDashboardCustomersIdImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/_dashboard-layout/dashboard/glasses/$id': {
      preLoaderRoute: typeof DashboardLayoutDashboardGlassesIdImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/_dashboard-layout/dashboard/resins/$id': {
      preLoaderRoute: typeof DashboardLayoutDashboardResinsIdImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/_dashboard-layout/dashboard/additives/': {
      preLoaderRoute: typeof DashboardLayoutDashboardAdditivesIndexImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/_dashboard-layout/dashboard/customers/': {
      preLoaderRoute: typeof DashboardLayoutDashboardCustomersIndexImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/_dashboard-layout/dashboard/glasses/': {
      preLoaderRoute: typeof DashboardLayoutDashboardGlassesIndexImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/_dashboard-layout/dashboard/resins/': {
      preLoaderRoute: typeof DashboardLayoutDashboardResinsIndexImport
      parentRoute: typeof DashboardLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  DashboardLayoutRoute.addChildren([
    DashboardLayoutDashboardIndexRoute,
    DashboardLayoutDashboardAdditivesIdRoute,
    DashboardLayoutDashboardCustomersIdRoute,
    DashboardLayoutDashboardGlassesIdRoute,
    DashboardLayoutDashboardResinsIdRoute,
    DashboardLayoutDashboardAdditivesIndexRoute,
    DashboardLayoutDashboardCustomersIndexRoute,
    DashboardLayoutDashboardGlassesIndexRoute,
    DashboardLayoutDashboardResinsIndexRoute,
  ]),
])

/* prettier-ignore-end */
